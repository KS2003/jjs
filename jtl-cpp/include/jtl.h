#include <cstdio>

struct TestgenInput {
    FILE* out_file;
    int test_id;
};

TestgenInput init_testgen();

struct CheckerInput {
    /// Contestant's solution answer
    FILE* sol_answer;
    /// Correct answer (answer generated by primary solution), if requested by problem config. Otherwise, refers to /dev/null
    FILE* corr_answer;
    /// Test data
    FILE* test;
};

CheckerInput init_checker();

/// return type for functions that do not return
enum class Uninhabited {
};

enum class CheckOutcome {
    /// Checker couldn't recognize answer
            PRESENTATION_ERROR,
    /// Answer was wrong
            WRONG_ANSWER,
    /// Correct answer
            OK,
    /// Checker is incorrect
    /// for example, contestant provided more optimal answer than jury
            CHECKER_LOGIC_ERROR,
};

/// Checker exits using this function
/// If checker simply exits with e.g. exit(0) protocol will be broken and internal judging error will be diagnosed
Uninhabited checker_finish(CheckOutcome outcome);

/// utility functions checks than only whitespace chars are remaining in file
bool is_file_eof(FILE* f);

namespace check_utils {
    void comment(const char* format, ...);

    void sol_scanf(const char* format, ...);

    void corr_scanf(const char* format, ...);

    void test_scanf(const char* format, ...);

    void check_sol_eof();
    void check_corr_eof();
    void check_test_eof();

    /// Reads next char sequence, followed by whitespace
    char* next_token(FILE* f);
}
